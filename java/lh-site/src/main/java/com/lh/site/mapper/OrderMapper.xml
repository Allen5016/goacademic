<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lh.site.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.lh.site.entity.Order" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_code" property="orderCode" jdbcType="CHAR" />
    <result column="student_info_id" property="studentInfoId" jdbcType="BIGINT" />
    <result column="order_amount" property="orderAmount" jdbcType="DECIMAL" />
    <result column="paid_amount" property="paidAmount" jdbcType="DECIMAL" />
    <result column="paid_time" property="paidTime" jdbcType="TIMESTAMP" />
    <result column="pay_type" property="payType" jdbcType="INTEGER" />
    <result column="pay_status" property="payStatus" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_code, student_info_id, order_amount, paid_amount, paid_time, pay_type, 
    pay_status, create_time, remarks
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="getOrderByParams" resultMap="BaseResultMap">
  	SELECT 
  		o.id, o.order_code, o.student_info_id, o.order_amount, o.paid_amount, o.paid_time, o.pay_type, 
    	o.pay_status, o.create_time, o.remarks 
	FROM `t_order` AS o
	LEFT JOIN t_order_item AS oi ON o.order_code = oi.order_code
	WHERE o.student_info_id = #{studentInfoId,jdbcType=BIGINT}
	AND oi.course_id = #{courseId,jdbcType=BIGINT}
	AND o.pay_status = 2
	AND o.paid_amount != 0;
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lh.site.entity.Order" >
    insert into t_order (id, order_code, student_info_id, 
      order_amount, paid_amount, paid_time, 
      pay_type, pay_status, create_time, 
      remarks)
    values (#{id,jdbcType=BIGINT}, #{orderCode,jdbcType=CHAR}, #{studentInfoId,jdbcType=BIGINT}, 
      #{orderAmount,jdbcType=DECIMAL}, #{paidAmount,jdbcType=DECIMAL}, #{paidTime,jdbcType=TIMESTAMP}, 
      #{payType,jdbcType=INTEGER}, #{payStatus,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lh.site.entity.Order" >
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderCode != null" >
        order_code,
      </if>
      <if test="studentInfoId != null" >
        student_info_id,
      </if>
      <if test="orderAmount != null" >
        order_amount,
      </if>
      <if test="paidAmount != null" >
        paid_amount,
      </if>
      <if test="paidTime != null" >
        paid_time,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="payStatus != null" >
        pay_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderCode != null" >
        #{orderCode,jdbcType=CHAR},
      </if>
      <if test="studentInfoId != null" >
        #{studentInfoId,jdbcType=BIGINT},
      </if>
      <if test="orderAmount != null" >
        #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="paidAmount != null" >
        #{paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="paidTime != null" >
        #{paidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null" >
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lh.site.entity.Order" >
    update t_order
    <set >
      <if test="orderCode != null" >
        order_code = #{orderCode,jdbcType=CHAR},
      </if>
      <if test="studentInfoId != null" >
        student_info_id = #{studentInfoId,jdbcType=BIGINT},
      </if>
      <if test="orderAmount != null" >
        order_amount = #{orderAmount,jdbcType=DECIMAL},
      </if>
      <if test="paidAmount != null" >
        paid_amount = #{paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="paidTime != null" >
        paid_time = #{paidTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null" >
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lh.site.entity.Order" >
    update t_order
    set order_code = #{orderCode,jdbcType=CHAR},
      student_info_id = #{studentInfoId,jdbcType=BIGINT},
      order_amount = #{orderAmount,jdbcType=DECIMAL},
      paid_amount = #{paidAmount,jdbcType=DECIMAL},
      paid_time = #{paidTime,jdbcType=TIMESTAMP},
      pay_type = #{payType,jdbcType=INTEGER},
      pay_status = #{payStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>